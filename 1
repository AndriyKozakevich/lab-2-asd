#include <iostream>
#include <cstdlib>
#include <ctime>


void swap(int& a, int& b) {
    int temp = a;
    a = b;
    b = temp;
}


void heapify(int arr[], int n, int i) {
    int smallest = i;
    int left = 2 * i + 1;
    int right = 2 * i + 2;

    if (left < n && arr[left] < arr[smallest])
        smallest = left;

    if (right < n && arr[right] < arr[smallest])
        smallest = right;

    if (smallest != i) {
        swap(arr[i], arr[smallest]);
        heapify(arr, n, smallest);
    }
}


void heapSort(int arr[], int n) {
    for (int i = n / 2 - 1; i >= 0; i--)
        heapify(arr, n, i);

    for (int i = n - 1; i > 0; i--) {
        swap(arr[0], arr[i]);
        heapify(arr, i, 0);
    }
}

int main() {
    setlocale(LC_ALL, "Ukrainian");
    using namespace std;
    const int size = 6;
    int matrix[size][size];

    
    srand(static_cast<unsigned int>(time(0)));
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            matrix[i][j] = rand() % 100;  
        }
    }

    
    int diagonal[size];
    for (int i = 0; i < size; i++) {
        diagonal[i] = matrix[i][i];
    }

    
    heapSort(diagonal, size);

    
    for (int i = 0; i < size; i++) {
        matrix[i][i] = diagonal[i];
    }

    
    cout << "Відсортована матриця за зростанням:\n";
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << std::endl;
    }

    return 0;
}
